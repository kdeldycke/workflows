---
name: Lint
"on":
  workflow_call:
  push:
    branches-ignore:
      # Skip linting on prepare-release branch as it points to a tagged URL that does not exist yet.
      - prepare-release
  pull_request:

jobs:

  lint-python:
    # Skip linting on prepare-release branch as it points to a tagged URL that does not exist yet.
    if: github.head_ref != 'prepare-release'
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: actions/setup-python@v2.3.1
      - name: Install pip
        run: |
          python -m pip install --upgrade pip
      - name: Install project with Poetry
        # If currrent project has a pyproject.toml file at its root, install it with Poetry. That way we avoid import
        # errors in Pylint reports.
        if: hashFiles('pyproject.toml')
        run: |
          python -m pip install --upgrade poetry
          # Allows our Pylint version to access project's dependencies.
          poetry config virtualenvs.create false
          poetry install --no-interaction
      - name: Install Pylint
        run: >
          python -m pip install --requirement
          https://raw.githubusercontent.com/kdeldycke/workflows/v0.4.6/requirements.txt
      - name: Run Pylint
        if: hashFiles('**/*.py')
        # Docs:
        # http://pylint.pycqa.org/en/latest/technical_reference/features.html
        # --output-format=colorized
        #   Colorize output.
        # --jobs=0
        #   Use all available processors.
        # --max-line-length=88
        #   Aligns to black's config; See https://black.readthedocs.io/en/
        #   stable/guides/using_black_with_other_tools.html#pylint
        # --fail-under=8
        #   80% linter success is good enough.
        # --logging-format-style=new
        #   The type of string formatting that logging methods do. `old` means
        #   using % formatting, `new` is for `{}` formatting.
        # $(git ls-files '*.py')
        #   Use git to list all Python files as Pylint doesn't support globs
        #   and non-module folders.
        #   Source: https://stackoverflow.com/a/63044665
        run: >
          pylint
          --output-format=colorized
          --jobs=0
          --max-line-length=88
          --fail-under=8
          --logging-format-style=new
          $(git ls-files '*.py')

  lint-yaml:
    # Skip linting on prepare-release branch as it points to a tagged URL that
    # does not exist yet.
    if: github.head_ref != 'prepare-release'
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: actions/setup-python@v2.2.2
      - name: Install pip
        run: |
          python -m pip install --upgrade pip
      - name: Install yamllint
        run: >
          python -m pip install --requirement
          https://raw.githubusercontent.com/kdeldycke/workflows/v0.4.6/requirements.txt
      - name: Run yamllint
        run: |
          yamllint --strict --config-data "{rules: {line-length: {max: 120}}}" --format github .
