# Output the version of the CLI.
- cli_parameters: --version
  timeout: 10.0
  exit_code: 0
  stdout_contains: ", version"
  stdout_regex_fullmatch: "\x1b\\[97mgha-utils\x1b\\[0m, version \x1b\\[32mNone\x1b\\[0m\\n"


# Test combination of version and verbosity.
- cli_parameters:
    - --verbosity
    - DEBUG
    - --version
  exit_code: 0
  stdout_contains: ", version"
  stdout_regex_matches: "\x1b\\[97mgha-utils\x1b\\[0m, version "
  stderr_contains:
    - "Set <RootLogger root (DEBUG)> to DEBUG."
    - "\x1b[34mdebug\x1b[0m: {prog_name}      : \x1b[97mgha-utils\x1b[0m\n"
  stderr_regex_matches:
    - "\x1b\\[34mdebug\x1b\\[0m: {prog_name}      : \x1b\\[97mgha-utils\x1b\\[0m\n"


# Test help output.
- cli_parameters:
    - --help
  strip_ansi: true
  stdout_contains:
    - "Usage: gha-utils [OPTIONS] COMMAND [ARGS]..."
    - "-h, --help"


# Test metadata output.
- cli_parameters: --verbosity INFO metadata
  stderr_contains:
    - "info: Print metadata to <stdout>"
  # XXX bump-myversion is crashing when compiled with Nuitka because of a pydantic-related issue:
  # https://github.com/callowayproject/bump-my-version/issues/300
  # stdout_regex_fullmatch: |-
  #   new_commits=
  #   release_commits=
  #   gitignore_exists=true
  #   python_files=[\S ]*
  #   doc_files=[\S ]*
  #   is_python_project=true
  #   package_name=gha-utils
  #   blacken_docs_params=--target-version py310 --target-version py311 --target-version py312 --target-version py313
  #   mypy_params=--python-version 3\.10
  #   current_version=
  #   released_version=
  #   is_sphinx=false
  #   active_autodoc=false
  #   release_notes=
  #   new_commits_matrix=
  #   release_commits_matrix=
  #   nuitka_matrix={"os": ["ubuntu-24\.04", "ubuntu-24\.04-arm", "macos-15", "macos-13", "windows-2025"], "entry_point": ["gha-utils"], "commit": ["[a-z0-9]+"], "include": [{"entry_point": "gha-utils", "cli_id": "gha-utils", "module_id": "gha_utils\.__main__", "callable_id": "main", "module_path": "gha_utils(/|\\\\)__main__\.py"}, {"commit": "[a-z0-9]+", "short_sha": "[a-z0-9]+", "current_version": "[0-9\.]+"}, {"os": "ubuntu-24\.04", "platform_id": "linux", "arch": "x64", "extension": "bin"}, {"os": "ubuntu-24\.04-arm", "platform_id": "linux", "arch": "arm64", "extension": "bin"}, {"os": "macos-15", "platform_id": "macos", "arch": "arm64", "extension": "bin"}, {"os": "macos-13", "platform_id": "macos", "arch": "x64", "extension": "bin"}, {"os": "windows-2025", "platform_id": "windows", "arch": "x64", "extension": "exe"}, {"os": "ubuntu-24\.04", "entry_point": "gha-utils", "commit": "[a-z0-9]+", "bin_name": "gha-utils-linux-x64-build-[a-z0-9]+\.bin"}, {"os": "ubuntu-24\.04-arm", "entry_point": "gha-utils", "commit": "[a-z0-9]+", "bin_name": "gha-utils-linux-arm64-build-[a-z0-9]+\.bin"}, {"os": "macos-15", "entry_point": "gha-utils", "commit": "[a-z0-9]+", "bin_name": "gha-utils-macos-arm64-build-[a-z0-9]+\.bin"}, {"os": "macos-13", "entry_point": "gha-utils", "commit": "[a-z0-9]+", "bin_name": "gha-utils-macos-x64-build-[a-z0-9]+\.bin"}, {"os": "windows-2025", "entry_point": "gha-utils", "commit": "[a-z0-9]+", "bin_name": "gha-utils-windows-x64-build-[a-z0-9]+\.exe"\}\]\}


# Test changelog output.
- cli_parameters:
    - --verbosity
    - INFO
    - changelog
  # XXX This command fail on Windows as it try to print emojis to the console, from the source changelog:
  # UnicodeEncodeError: 'charmap' codec can't encode character '\U0001f64f' in position 39913: character maps
  # to <undefined>
  skip_platforms:
    - Windows
  stdout_regex_fullmatch: |-
    # Changelog

    ## \[[0-9\.]+ \(unreleased\)\]\(https://github.com/kdeldycke/workflows/compare/v[0-9\.]+\.\.\.main\)

    > \[\!IMPORTANT\]
    > This version is not released yet and is under active development\.

    .*


# Test mailmap-sync output.
- cli_parameters:
    - --verbosity
    - INFO
    - mailmap-sync
  exit_code: 0
  stdout_contains: "# Generated by gha-utils mailmap-sync v"
  stderr_contains:
    - "info: Print updated results to <stdout>."
  stderr_regex_matches:
    - "info: Read initial mapping from \\S+\\.mailmap"


# Test test-plan output.
- cli_parameters:
    - --verbosity
    - INFO
    - test-plan
  exit_code: 2
  strip_ansi: true
  stderr_contains: |
    Usage: gha-utils test-plan [OPTIONS]
    Try 'gha-utils test-plan --help' for help.

    Error: Missing option '--binary'.
