# This test plan checks some high-level behavior of the gha-utils CLI.
# But also serves as unittests for the features supported by the YAML parser.

# Output the version of the CLI.
- # Test single parameter provided as a string.
  cli_parameters: --version
  # Test providing floating-point numbers to timeout.
  timeout: 20.0
  exit_code: 0
  stdout_contains: ", version"
  stdout_regex_fullmatch: "\x1b\\[97mgha-utils\x1b\\[0m, version \x1b\\[32mNone\x1b\\[0m\\n"


# Test combination of version and verbosity.
- cli_parameters:
    # Test parameters provided as a list of strings.
    - --verbosity
    - DEBUG
    - --version
  exit_code: 0
  stdout_contains: ", version"
  stdout_regex_matches: "\x1b\\[97mgha-utils\x1b\\[0m, version "
  stderr_contains:
    - "Set <RootLogger root (DEBUG)> to DEBUG."
    - "\x1b[34mdebug\x1b[0m: {prog_name}      : \x1b[97mgha-utils\x1b[0m\n"
  stderr_regex_matches:
    - "\x1b\\[34mdebug\x1b\\[0m: {prog_name}      : \x1b\\[97mgha-utils\x1b\\[0m\n"


# Test help output.
- cli_parameters:
    - --help
  strip_ansi: true
  stdout_contains:
    - "Usage: gha-utils [OPTIONS] COMMAND [ARGS]..."
    - "-h, --help"


# Test metadata output.
- cli_parameters: --verbosity INFO metadata
  # XXX This command fail on Windows as it try to print emojis to the console, from the source changelog:
  # UnicodeEncodeError: 'charmap' codec can't encode character '\U0001f64f' in position 39913: character maps
  # to <undefined>
  skip_platforms: windows
  stderr_contains:
    - "info: Print metadata to <stdout>"
  stdout_regex_fullmatch: |-
    is_bot=false
    new_commits=
    release_commits=
    gitignore_exists=true
    python_files="[\S ]+"
    json_files=
    doc_files="[\S ]+"
    markdown_files="[\S ]+"
    zsh_files=
    is_python_project=true
    package_name=gha-utils
    blacken_docs_params=--target-version py311 --target-version py312 --target-version py313 --target-version py314
    mypy_params=--python-version 3\.11
    current_version=[0-9.]+
    released_version=
    is_sphinx=false
    active_autodoc=false
    release_notes<<GHA_DELIMITER_[0-9]+
    .+
    GHA_DELIMITER_[0-9]+
    new_commits_matrix=
    release_commits_matrix=
    build_targets=\[\{"target": .+\}\]
    nuitka_matrix=\{"os": \[.+\], "entry_point": \[.+\], "commit": \[.+\], "include": \[\{.+\}\]\}


# Test changelog output.
- cli_parameters:
    - --verbosity
    - INFO
    - changelog
  # XXX This command fail on Windows as it try to print emojis to the console, from the source changelog:
  # UnicodeEncodeError: 'charmap' codec can't encode character '\U0001f64f' in position 39913: character maps
  # to <undefined>
  skip_platforms: Windows
  stdout_regex_fullmatch: |-
    # Changelog

    ## \[[0-9\.]+ \(unreleased\)\]\(https://github.com/kdeldycke/workflows/compare/v[0-9\.]+\.\.\.main\)

    > \[\!IMPORTANT\]
    > This version is not released yet and is under active development\.

    .+


# Test mailmap-sync output.
- cli_parameters:
    - --verbosity
    - INFO
    - mailmap-sync
  only_platforms:
    # Test mixed-case platform names, provided as a list of strings.
    - linux
    - macOS
    - windows
  exit_code: 0
  stdout_contains: "# Generated by gha-utils mailmap-sync v"
  stderr_contains:
    - "info: Print updated results to <stdout>."
  stderr_regex_matches:
    - "info: Read initial mapping from \\S+\\.mailmap"


# Test test-plan output.
- cli_parameters:
    - --verbosity
    - INFO
    - test-plan
  exit_code: 2
  strip_ansi: true
  # Test multi-line single string.
  stderr_contains: |
    Usage: gha-utils test-plan [OPTIONS]
    Try 'gha-utils test-plan --help' for help.

    Error: Missing option '--binary'.
